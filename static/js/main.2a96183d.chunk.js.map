{"version":3,"sources":["components/SetTimer.js","components/App.js","index.js"],"names":["SetTimer","props","id","title","toLowerCase","className","onClick","handleIncrease","count","handleDecrease","audio","document","getElementById","App","state","breakCount","sessionCount","timerON","clockCount","currentTimer","handlePlayPause","clearInterval","loop","setState","setInterval","play","handleReset","pause","currentTime","handleSessionIncrement","handleBreakIncrement","handleBreakDecrement","handleSessionDecrement","convertTime","minutes","Math","floor","seconds","this","breakProps","sessionProps","React","Component","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.2a96183d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SetTimer = (props) => {\r\n    const id = props.title.toLowerCase();\r\n    return (\r\n        <div className='timer-container'>\r\n            <h2 id={`${id}-label`}>{props.title} length</h2>\r\n\r\n            <div className='flex actions'>\r\n                <i className=\"fas fa-arrow-up\" id={`${id}-increment`} onClick={props.handleIncrease}></i>\r\n                <span id={`${id}-length`}>{props.count}</span>\r\n                <i className=\"fas fa-arrow-down\" id={`${id}-decrement`} onClick={props.handleDecrease}></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SetTimer","import React from 'react';\r\nimport SetTimer from './SetTimer';\r\nimport './App.css';\r\n\r\nconst audio = document.getElementById('beep');\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        breakCount: 5,\r\n        sessionCount: 25,\r\n        timerON: false,\r\n        clockCount: 25 * 60,\r\n        currentTimer: 'Session'\r\n    }\r\n/********************************************************************/ \r\n    handlePlayPause = () => {\r\n        const { timerON } = this.state;\r\n        if (timerON) {\r\n            clearInterval(this.loop)\r\n            this.setState({ timerON: false })\r\n        } else {\r\n            this.setState({ timerON: true })\r\n            this.loop = setInterval(() => {\r\n                const {\r\n                    breakCount,\r\n                    sessionCount,\r\n                    clockCount,\r\n                    currentTimer,\r\n                } = this.state\r\n                if (clockCount === 0) {\r\n                    this.setState({\r\n                        currentTimer: (currentTimer === 'Session' ? 'Break' : 'Session'),\r\n                        clockCount: (currentTimer === 'Session' ? (breakCount * 60) : (sessionCount * 60))\r\n                    })\r\n                    audio.play();\r\n\r\n                } else {\r\n                    this.setState({ clockCount: clockCount - 1 })\r\n                }\r\n            }, 1000);\r\n        }\r\n    }\r\n    /****************************************************************************************** */\r\n    handleReset = () => {\r\n        this.setState({\r\n            breakCount: 5,\r\n            sessionCount: 25,\r\n            timerON: false,\r\n            clockCount: 25 * 60,\r\n            currentTimer: 'Session'\r\n        })\r\n        clearInterval(this.loop);\r\n        audio.pause();\r\n        audio.currentTime = 0\r\n    }\r\n    /****************************************************************************************** */\r\n    handleSessionIncrement = () => {\r\n        const { sessionCount, currentTimer, timerON } = this.state;\r\n        if (sessionCount < 60) {\r\n            if (!timerON && currentTimer === 'Session') {\r\n                this.setState({\r\n                    sessionCount: sessionCount + 1,\r\n                    clockCount: (sessionCount + 1) * 60\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    sessionCount: sessionCount + 1\r\n                })\r\n            }\r\n        }\r\n    }\r\n    /****************************************************************************************** */\r\n    handleBreakIncrement = () => {\r\n        const { breakCount, currentTimer, timerON } = this.state;\r\n        if (breakCount < 60) {\r\n            if (!timerON && currentTimer === 'Break') {\r\n                this.setState({\r\n                    breakCount: breakCount + 1,\r\n                    clockCount: (breakCount + 1) * 60\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    breakCount: breakCount + 1\r\n                })\r\n            }\r\n        }\r\n    }\r\n    /****************************************************************************************** */\r\n    handleBreakDecrement = () => {\r\n        const { breakCount, currentTimer, timerON } = this.state;\r\n        if (breakCount > 1 ) {\r\n            if (!timerON && currentTimer === 'Break') {\r\n                this.setState({\r\n                    breakCount: breakCount - 1,\r\n                    clockCount: (breakCount - 1) * 60\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    breakCount: breakCount - 1\r\n                })\r\n            }\r\n        }\r\n    }\r\n    /****************************************************************************************** */\r\n    handleSessionDecrement = () => {\r\n        const { sessionCount, currentTimer, timerON } = this.state;\r\n        if (sessionCount > 1) {\r\n            if (!timerON && currentTimer === 'Session') {\r\n                this.setState({\r\n                    sessionCount: sessionCount - 1,\r\n                    clockCount: (sessionCount - 1) * 60\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    sessionCount: sessionCount - 1\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n/****************************************************************************************** */\r\n    convertTime = (count) => {\r\n        let minutes = Math.floor(count / 60);\r\n        let seconds = count % 60\r\n\r\n        minutes = minutes < 10 ? ('0' + minutes) : (minutes);\r\n        seconds = seconds < 10 ? ('0' + seconds) : (seconds);\r\n\r\n        return `${minutes}:${seconds}`;\r\n    }\r\n    /****************************************************************************************** */\r\n    render() {\r\n        const { breakCount, sessionCount } = this.state;\r\n        const breakProps = {\r\n            title: 'Break',\r\n            count: breakCount,\r\n            handleDecrease: this.handleBreakDecrement,\r\n            handleIncrease: this.handleBreakIncrement\r\n        }\r\n        const sessionProps = {\r\n            title: 'Session',\r\n            count: sessionCount,\r\n            handleDecrease: this.handleSessionDecrement,\r\n            handleIncrease: this.handleSessionIncrement,\r\n        }\r\n        const { clockCount, currentTimer, timerON } = this.state;\r\n\r\n        return (\r\n            <div className='app'>\r\n                <div className='flex'>\r\n                    <SetTimer {...breakProps} />\r\n                    <SetTimer {...sessionProps} />\r\n                </div>\r\n                <div className='clock-container'>\r\n                    <h1 id='timer-label'>{currentTimer}</h1>\r\n                    <span id='time-left'>{this.convertTime(clockCount)}</span>\r\n                    <div>\r\n                        <i className={`fas fa-${timerON ? 'pause' : 'play'}`} id='start_stop' onClick={this.handlePlayPause} />\r\n                        <i className='fas fa-sync-alt' id='reset' onClick={this.handleReset} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}